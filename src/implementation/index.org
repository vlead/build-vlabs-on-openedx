#+Title: Implementation of *build vlabs on OpenedX* project  
#+Author: Sytems Team
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document contains the implementation of *build vlabs on OpenedX* project  
* Implementation
** Steps to export the lab from vlabs
   - Select the Computer Programming lab from vlabs studio.
   - Go to the [[http://vlabs.ac.in:18010/home/][Vlabs-Openedx-Studio]] to export the lab. 
   - Click on "Tools" which is found in the header part of the page.
   - Select "Export" option from the tools.
   - Click on the download link which is displayed after selecting the
     Export option.
   - Extract the downloaded file and rename it with the appropriate
     lab name to identify easily.
  
** Steps to version control the labs at github 
   - Go to [[https://github.com/openedx-vlead][Github/OpenEdx-Vlead]]  organization to clone the repository.
   - Clone the lab.
   - Now copy the lab sources which are extracted from the vlabs.ac.in to
     the cloned repository of a lab.
   - Considering computer programming lab as an example to extract
     and version control the lab.
     
   *Example:*
       *Exporting the lab from open edx studio*
       - Type vlabs.ac.in:18010 on borwser
       - Login to the Open edX studio -> Choose Computer Programming
	 Lab -> Click on Tools -> Export -> Click on Export Course
	 Content -> Displays a pop up to download the course -> Save
	 and rename the course as computer-programming-lab.
       *Version Controlling the edx course* 
       - Got to [[https://github.com/vlabs-on-openedx][Vlabs-on-OpenedX]] organization and clone [[https://github.com/vlabs-on-openedx/open-edx-computer-programming-iiith][Computer Programming Lab]] 
       #+BEGIN_EXAMPLE
       git clone https://github.com/vlabs-on-openedx/open-edx-computer-programming-iiith.git
       #+END_EXAMPLE 

       - Now copy the downloaded lab courses to the cloned repository
	 using the below comman:
       #+BEGIN_EXAMPLE
       $ rsync -rf computer-programming-lab/* ../open-edx-computer-programming-iiith/
       #+END_EXAMPLE
    
       - Use *Terminal* and go to path where the lab is cloned to push
       the sources to github with the below commands:
    
       #+BEGIN_EXAMPLE
       git status git add * 
       git commit -m "updated the sources" 
       git push origin master
       #+END_EXAMPLE
       
       - Give gitusername and password 
       - The sorces are versioned controlled successfully. 

   - Finally enter the github username and password to push the
     sources to git.
   - Version controlling of the lab is completed.
** Python Script
     - Below pyhton code imports the required modules
     - Installs python-pip and gitpython 
     - Python-pip is to install git python
     - GitPython is a python library used to interact with Git repositories.
     - Downloads all the git repositories from the git organization in a
       JSON format using an API.
     - Renames the Json file from "repos?per_page=92" to "edxrepos.json"
     - Using Json file every repo is cloned and tared individually.
     - Replaced a link *http://open-edx.vlabs.ac.in:5959* to 
       *https://vlabs.ac.in:5959* in all the feedback links of all
       the labs.
     - Moved the cloned and tared files in an appropriate folder which
       are auto-created as edx-repos & edx-tarfiles  
     
   #+BEGIN_SRC python :tangle automation.py
import json
import sys
import subprocess
import os
import re

os.system('sudo apt-get install python-pip')                

import pip

os.environ["HTTP_PROXY"] = "http://proxy.iiit.ac.in:8080"
os.environ["HTTPS_PROXY"] = "http://proxy.iiit.ac.in:8080"

pip.main(['install', 'gitpython'])

from pprint import pprint
from git import Repo
import tarfile
import string

os.system("wget https://api.github.com/orgs/vlabs-on-openedx/repos?per_page=2")
os.rename('repos?per_page=2','edxrepos.json')
   
SRC_PATH= "../edx_repos"
DEST_PATH = "../edx_tarfiles"
old_string = "http://open-edx.vlabs.ac.in:5959"
new_string = "https://vlabs.ac.in:5959"

os.makedirs('../edx_repos')
os.makedirs('../edx_tarfiles')

with open('edxrepos.json') as data_file:    
    data = json.load(data_file)
    
    for i in range(2):
        repo_name = (data[i]["name"].encode("utf-8"))
        repo_url = (data[i]["html_url"].encode("utf-8"))
        os.chdir(SRC_PATH)

        if not os.path.isdir(repo_name):
            Repo.clone_from(repo_url, repo_name)

            cmd="grep -lr  "  + old_string + " " + "../edx_repos" + " |xargs sed -i " + "\"s#" +old_string + "#" + new_string + "#g\""
            pprint (cmd)
            os.system(cmd)             
            
            cmd1="rsync -r SRC_PATH "
            os.system(cmd1)
            
            os.chdir(DEST_PATH)   
            tar_cmd = ("tar -cvf %s.tar.gz %s/%s" % (repo_name, SRC_PATH, repo_name))
            os.system(tar_cmd)

   #+END_SRC

** Steps to move the labs from one Organization to another Organization
   - On GitHub, navigate to the main page of the repository.
   - Under the lab repository name, click Settings.
   - Click Transfer.
   - Read the warnings and enter the repository name to confirm that
     you've done so.
   - Type the name of the new owner and click I understand, transfer
     this repo.
   - Created a new repository with the lab name "Single Board Heater
     system Simulation Virtual Lab" under openedx/vlead.
    
* Issues in the Open-edX
  - Feedback links should be changed from http://open-edx.vlabs.ac.in:5995 to https://vlabs.ac.in:5959
  - Fixed the feedback issue in all the labs.
  - Full screen is diappeard in some of the labs.
  - Added Full Screen to the experiments.
  - While editing the html page on Open-edX studio, the html editor in the
    simulation unit was not responded to updated the Full Screen
    button.
  - Hence deleted the existing Iframe in the html editor and added new
    Iframe for the above mentione√±d two labs and updated the
    experiment Id.

