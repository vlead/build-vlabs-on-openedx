#+Title: Build vlabs on Openedx 
#+Author: Sytems Team
#+SETUPFILE: ./org-templates/level-0.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This documnet contains the process of versioning the open-edx labs
  to github.
* Requirement
  1. Version control all [[https://github.com/vlabs-on-openedx][vlabs-on-openedx]] repositories.
  2. Automate importing vlabs courses onto vlabs.ac.in
     
* Implementation
* First Requirement Implementation  
*** Steps to export the lab from open-edx
    - Select the Computer Programming lab from open-edx studio.
    - Go to the [[http://vlabs.ac.in:18010/home/][Vlabs-Openedx-Studio]] to export the lab. 
    - Click on "Tools" which is found in the header part of the page.
    - Select "Export" option from the tools.
    - Click on the download link which is displayed after selecting the
      Export option.
    - Extract the downloaded file and rename it with the appropriate
      lab name to identify easily.
   
*** Steps to version control the labs at github 
    - Go to [[https://github.com/openedx-vlead][Github/OpenEdx-Vlead]] to clone the repository.
    - Clone the lab [[https://github.com/openedx-vlead/open-edx-computer-programming-iiith.git][Computer Programming]].
    - Copy the downloaded lab sources of computer programming lab to
      the github repository of Computer programming lab using the below
      cammand
     
      #+BEGIN_EXAMPLE
      sravanthi@sravanthi:~/Downloads$ cp -rf computer-programming/*
      /home/sravanthi/open-edx-computer-programming-iiith
      #+END_EXAMPLE
     
    - Go to the location of the lab on the terminal and follow the
      below steps to push the sources to github:
     
      #+BEGIN_EXAMPLE
      git status git add * 
      git commit -m "updated the sources" 
      git push origin master
      #+END_EXAMPLE
  
    - Finally enter the github username and password to push the
      sources to git.
    - Version controlling of the lab is completed.
    - Created a new repository with the lab name "Single Board Heater
      system Simulation Virtual Lab" under openedx/vlead.
*** Steps to move the labs from one Organization to another Organization
   - On GitHub, navigate to the main page of the repository.
   - Under the lab repository name, click Settings.
   - Click Transfer.
   - Read the warnings and enter the repository name to confirm that
     you've done so.
   - Type the name of the new owner and click I understand, transfer
     this repo.

** Second Requirement Implementation
***  Automation Script to clone the git repositories and port to Open-edx
**** Python Script
     
     - Below pyhton code imports the required modules
     - Downloads all the git repositories from the git organization in a
       JSON format using an API.
     - Renames the Json file from "repos?per_page=9" to "edxrepos.json"
     - Install gitpython to import git repos from github
     - Using Json file every repo is cloned and tared individually
     - Moved the cloned and tared files in an appropriate folder which
       are auto-created as edx-repos & edx-tarfiles  
     
   #+BEGIN_SRC python :tangle automation.py
   
import json
import sys
import subprocess
import os

# python get-pip.py

os.system(' apt-get install pip')                
#easy_install pip

import pip

os.environ["HTTP_PROXY"] = "http://proxy.iiit.ac.in:8080"
os.environ["HTTPS_PROXY"] = "http://proxy.iiit.ac.in:8080"

pip.main(['install', 'gitpython'])

from pprint import pprint
from git import Repo
import tarfile


os.system("wget https://api.github.com/orgs/vlabs-on-openedx/repos?per_page=92")
os.rename('repos?per_page=92','edxrepos.json')
   

SRC_PATH= "../edx_repos"
DEST_PATH = "../edx_tarfiles"

os.makedirs('../edx_repos')
os.makedirs('../edx_tarfiles')

with open('edxrepos.json') as data_file:    
    data = json.load(data_file)
    
    for i in range(91):
        repo_name = (data[i]["name"].encode("utf-8"))
        repo_url = (data[i]["html_url"].encode("utf-8"))
        os.chdir(SRC_PATH)


        if not os.path.isdir(repo_name):
            Repo.clone_from(repo_url, repo_name)

        os.chdir(DEST_PATH)   
        tar_cmd = ("tar -cvf %s.tar.gz %s/%s" % (repo_name, SRC_PATH, repo_name))

        os.system(tar_cmd)

   #+END_SRC
